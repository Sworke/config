# DivineEngine Quantumult 配置示例
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# 最新完整的示例需查看 Quantumult X 里「配置文件」中的「示例」
#

[general]
;profile_img_url=http://www.example.com/example.png

# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js

# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://www.qualcomm.cn/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me, *.pingan.com.cn, *.cmbchina.com

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
excluded_routes=239.255.255.250/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

# udp_whitelist 包含目标 UDP 端口，空表示所有的端口都在 udp_whitelist 中。通过Quantumult 隧道接口发送的 UDP 数据包(通过 Quantumult 隧道接口)，目标端口不在 udp_whitelist 中的 UDP 包将被丢弃。这个设置与策略无关，也与代理(服务器)端口无关。
;udp_whitelist=53, 123, 1900, 80-443

;icmp_auto_reply=true


[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的DNS服务器，如「server=223.5.5.5.5」)。
;no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > DNSPod Public DNS
server=119.29.29.29
# > Alibaba Public DNS
# server=223.5.5.5

# 本地 DNS 映射
# Firebase Cloud Messaging
address=/mtalk.google.com/108.177.125.188
# Google Dl
server=/dl.google.com/119.29.29.29
server=/dl.l.google.com/119.29.29.29

;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]


[policy]
static=Final, US, HK, JP, TW, KR, proxy, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png
static=Netflix, 🇨🇳 TW 21 GD x1.0 *, 🇯🇵 JP 21 HN x0.5 #, 🇯🇵 JP 24 HN x0.5 #, 🇯🇵 JP 31 GD x1.0 #, 🇷🇺 RU 11 HN x1.0 #, 🇸🇬 SG 11 HN x1.0 #, 🇸🇬 SG 31 GD x1.0 #, 🇺🇸 US 11 HN x1.0 *, 🇺🇸 US 12 JM x1.0 *, 🇺🇸 US 13 HN x1.0 *, 🇺🇸 US 21 HN x1.0 *, 🇺🇸 US 22 HN x1.0 *, 🇺🇸 US 23 JM x1.0 *, 🇺🇸 US 24 JM x1.0 *, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png
static=Clubhouse, direct, proxy, US, HK, JP, TW, KR, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Clubhouse.png
static=TikTok, US, HK, JP, TW, KR, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TikTok.png

static=Emby, direct, US, HK, JP, TW, KR, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Emby.png
#
# 需要策略图标的在策略后加上：img-url=http://example.com/icon.png
#

# 类型：静态(static)
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 类型：可用(available)
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 类型：负载均衡(round-robin)
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# 类型：延迟测试(url-latency-benchmark)
# 策略指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# 当用户在 Quantumult X 中手动启动 URL 测试时，策略结果也会被更新。
# 该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
;url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=0

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example


static=StreamingSE, HK, TW, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingSE.png
static=Guard, reject, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Adblock.png
static=YouTube, HK, KR, US, SG, JP, TW, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/YouTube.png
static=Spotify, direct, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Spotify.png

static=HK, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=TW, server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(港|日|韩|新|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
static=JP, server-tag-regex=(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=SG, server-tag-regex=(?=.*(新|狮|獅|SG|(?i)Singapore))^((?!(港|台|日|韩|美)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=KR, server-tag-regex=(?=.*(韩|KR|Korea))^((?!(港|台|日|美|新)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
url-latency-benchmark=US, server-tag-regex=(?=.*(美|US|(?i)States|American))^((?!(港|台|日|韩|新)).)*$, check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
[server_remote]

#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 86400 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#

[filter_remote]
#YouTube
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Video/YouTube.list, tag=YouTube, update-interval=86400, opt-parser=false,  enabled=true
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#Emby
https://raw.githubusercontent.com/echoops/emby/main/Filter/Emby.list, tag=Emby, update-interval=86400, enabled=true
#Clubhouse
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/Clubhouse.list, tag=Clouhouse, update-interval=86400, opt-parser=false,  enabled=true
#Spotify
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Music/Spotify.list, tag=Spotify, update-interval=86400, opt-parser=false,  enabled=true
#TiKTok
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Video/TikTok.list, tag=TikTok, update-interval=86400, opt-parser=false, enabled=true
#Netflix
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/Video/Netflix.list, tag=Netflix, update-interval=86400, opt-parser=false, enabled=true

# Unbreak 后续规则修正
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Unbreak.list, tag=🔂Unbreak, update-interval=86400, enabled=true

# Advertising 广告
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Advertising.list, tag=🛡Advertising, update-interval=86400, force-policy=Guard, enabled=true

# Privacy 隐私
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Privacy.list, tag=🛡️Privacy, force-policy=Guard, update-interval=86400, opt-parser=false, enabled=true

# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Guard/Hijacking.list, tag=🛡️Hijacking, update-interval=86400, force-policy=Guard, enabled=true



# StreamingSE 中国流媒体服务(面向海外版本)
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/StreamingMedia/StreamingSE.list, tag=🎞StreamingSE, update-interval=86400, opt-parser=false, enabled=false

# Global 全球加速
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Global.list, tag=🇺🇳Global, update-interval=86400, opt-parser=true, enabled=true

# China 中国直连
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/China.list, tag=🇨🇳China, update-interval=86400, enabled=true

# 推荐使用来自 ipipdotnet 的 ChinaIP 以解决数据不准确，以及因规则类型优先级(GEOIP > IP-CIDR)导致的问题，使用 ChinaIP.list 时需禁用「GEOIP,CN」规则
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Filter/Extra/ChinaIP.list, tag=🇨🇳ChinaIP(与「geoip, cn, direct」二选一), update-interval=86400, enabled=true

[rewrite_remote]
#
# 参数「tag」和「enabled」是可选的。
#
#Emby
https://raw.githubusercontent.com/echoops/limitless/main/QuantumultX/Rewrite/emby.qxrewrite, tag=Emby Premiere, update-interval=86400, enabled=true

https://raw.githubusercontent.com/Orz-3/Orz-3/master/QuantumultX/TikTok.conf, tag=Tiktok解锁, update-interval=86400, opt-parser=false, enabled=true

# General
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/General.conf, tag=🔀General, update-interval=86400, enabled=true

# Block Advertising
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/Advertising.conf, tag=🛡Block Advertising, update-interval=86400, enabled=true

# Block Advertising+
https://raw.githubusercontent.com/DivineEngine/Profiles/master/Quantumult/Rewrite/Block/AdvertisingPlus.conf, tag=🛡Block Advertising+, update-interval=86400, enabled=true



[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# Local Area Network 局域网
host-suffix, local, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

# GeoIP China(若启用，则禁用 ChinaIP.list)
-geoip, cn, direct

final, Final

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# [task_local] 完整示例请查看「示例」

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# [http_backend] 完整示例请查看「示例」

[mitm]
passphrase = 26D09A91
p12 = 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
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
